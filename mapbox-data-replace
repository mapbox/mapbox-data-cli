#!/usr/bin/env node

require('update-notifier')({ pkg: require('./package.json') }).notify();
var getInput = require('./lib/get_input');
var MapboxDatasets = require('mapbox/lib/services/datasets');
var argv = require('yargs')
    .usage('Usage: mapbox-data-replace <mapid or datasetid> [filename] [--user userid]')
    .demand(1,2)
    .argv;

var opts = argv.user ? { account: argv.user } : {};
var client = new MapboxDatasets(process.env.MapboxAccessToken, opts);

getInput(argv._[1], function(err, newFeatures) {
    if (err) throw err;
    client.listFeatures(argv._[0], function(err, oldFeatures) {
        if (err && err.statusCode === 404) {
            console.error('Error: user not found (are you using a token with datasets:write scope?)');
            throw err;
        }
        if (err) throw err;

        var toDo = oldFeatures.features.concat(newFeatures);

        (function makeRequest(leftToDo) {
            var body = leftToDo.splice(0, 100).reduce(function(body, item) {
                if (item.type === 'Feature') {
                    if (!body.put) body.put = [];
                    body.put.push(item);
                } else {
                    if (!body.delete) body.delete = [];
                    body.delete.push(item);
                }
                return body;
            }, {});

            client.bulkFeatureUpdate(body, argv._[0], function(err, data) {
                if (err) throw err;

                data.put.forEach(function(feature) {
                    console.log(JSON.stringify(feature));
                });

                if (leftToDo.length) return makeRequest(leftToDo);
            });
        })(toDo);
    });
});
